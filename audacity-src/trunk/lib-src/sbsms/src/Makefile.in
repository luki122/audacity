# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
EXTRA_PROGRAMS = sbsms$(EXEEXT) sbsmsplay$(EXEEXT) \
	wxsbsmsplayer$(EXEEXT)
subdir = src
DIST_COMMON = $(libsbsmsinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_c99_func_lrint.m4 \
	$(top_srcdir)/m4/ac_c99_func_lrintf.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libsbsmsincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libsbsms_la_LIBADD =
am_libsbsms_la_OBJECTS = pitch.lo peak.lo sms.lo track.lo \
	trackpoint.lo utils.lo audio.lo resample.lo sbsms.lo fft.lo \
	grain.lo buffer.lo subband.lo
libsbsms_la_OBJECTS = $(am_libsbsms_la_OBJECTS)
libsbsms_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libsbsms_la_LDFLAGS) $(LDFLAGS) -o $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__sbsms_SOURCES_DIST = test.cpp import.cpp import.h pcm.cpp pcm.h \
	convert.cpp convert.h mp3.cpp mp3.h mp3tech.cpp mp3tech.h \
	audiobuffer.cpp audiobuffer.h
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@am_sbsms_OBJECTS =  \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	test.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	import.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	pcm.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	convert.$(OBJEXT)
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@am_sbsms_OBJECTS =  \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	test.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	mp3.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	mp3tech.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	audiobuffer.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	import.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	pcm.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	convert.$(OBJEXT)
@ENABLE_SNDFILE_FALSE@am_sbsms_OBJECTS = test.$(OBJEXT) \
@ENABLE_SNDFILE_FALSE@	convert.$(OBJEXT)
sbsms_OBJECTS = $(am_sbsms_OBJECTS)
am__DEPENDENCIES_1 =
sbsms_DEPENDENCIES = libsbsms.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
sbsms_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(sbsms_LDFLAGS) $(LDFLAGS) -o $@
am__sbsmsplay_SOURCES_DIST = testplay.cpp play.cpp play.h \
	audiobuffer.cpp audiobuffer.h
@ENABLE_PORTAUDIO_TRUE@am_sbsmsplay_OBJECTS = testplay.$(OBJEXT) \
@ENABLE_PORTAUDIO_TRUE@	play.$(OBJEXT) audiobuffer.$(OBJEXT)
sbsmsplay_OBJECTS = $(am_sbsmsplay_OBJECTS)
@ENABLE_PORTAUDIO_TRUE@sbsmsplay_DEPENDENCIES = libsbsms.la \
@ENABLE_PORTAUDIO_TRUE@	$(am__DEPENDENCIES_1)
sbsmsplay_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(sbsmsplay_LDFLAGS) $(LDFLAGS) -o $@
am__wxsbsmsplayer_SOURCES_DIST = wxplayer.cpp wxplayer.h \
	wxplayerframe.cpp wxplayerframe.h wxplayctrl.cpp wxplayctrl.h \
	wxconvertdlg.cpp wxconvertdlg.h play.cpp play.h convert.cpp \
	convert.h import.cpp import.h pcm.cpp pcm.h audiobuffer.cpp \
	audiobuffer.h mp3.cpp mp3.h mp3tech.cpp mp3tech.h
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@am_wxsbsmsplayer_OBJECTS =  \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	wxplayer.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	wxplayerframe.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	wxplayctrl.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	wxconvertdlg.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	play.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	convert.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	import.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	pcm.$(OBJEXT) \
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@	audiobuffer.$(OBJEXT)
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@am_wxsbsmsplayer_OBJECTS =  \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	wxplayer.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	wxplayerframe.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	wxplayctrl.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	wxconvertdlg.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	play.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	convert.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	mp3.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	mp3tech.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	import.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	pcm.$(OBJEXT) \
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@	audiobuffer.$(OBJEXT)
@ENABLE_SNDFILE_FALSE@am_wxsbsmsplayer_OBJECTS = wxplayer.$(OBJEXT) \
@ENABLE_SNDFILE_FALSE@	wxplayerframe.$(OBJEXT) \
@ENABLE_SNDFILE_FALSE@	wxplayctrl.$(OBJEXT) \
@ENABLE_SNDFILE_FALSE@	wxconvertdlg.$(OBJEXT) play.$(OBJEXT) \
@ENABLE_SNDFILE_FALSE@	convert.$(OBJEXT) audiobuffer.$(OBJEXT)
wxsbsmsplayer_OBJECTS = $(am_wxsbsmsplayer_OBJECTS)
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@wxsbsmsplayer_DEPENDENCIES =  \
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@	libsbsms.la \
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@	$(am__DEPENDENCIES_1) \
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@	$(am__DEPENDENCIES_1) \
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@	$(am__DEPENDENCIES_1) \
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@	$(am__DEPENDENCIES_1)
wxsbsmsplayer_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(wxsbsmsplayer_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libsbsms_la_SOURCES) $(sbsms_SOURCES) $(sbsmsplay_SOURCES) \
	$(wxsbsmsplayer_SOURCES)
DIST_SOURCES = $(libsbsms_la_SOURCES) $(am__sbsms_SOURCES_DIST) \
	$(am__sbsmsplay_SOURCES_DIST) \
	$(am__wxsbsmsplayer_SOURCES_DIST)
libsbsmsincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libsbsmsinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAD_LIBS = @MAD_LIBS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PORTAUDIO_CFLAGS = @PORTAUDIO_CFLAGS@
PORTAUDIO_LIBS = @PORTAUDIO_LIBS@
RANLIB = @RANLIB@
SBSMS_BIN = @SBSMS_BIN@
SBSMS_PROGS = @SBSMS_PROGS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHARED_VERSION_INFO = @SHARED_VERSION_INFO@
SHELL = @SHELL@
SHLIB_VERSION_ARG = @SHLIB_VERSION_ARG@
SNDFILE_CFLAGS = @SNDFILE_CFLAGS@
SNDFILE_LIBS = @SNDFILE_LIBS@
STRIP = @STRIP@
VERSION = @VERSION@
WX_CFLAGS = @WX_CFLAGS@
WX_CONFIG = @WX_CONFIG@
WX_LIBS = @WX_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CXXFLAGS = -funroll-loops -I../include -fstrict-aliasing $(SNDFILE_CFLAGS) $(PORTAUDIO_CFLAGS) $(WX_CFLAGS)
libsbsmsincludedir = $(includedir)
libsbsmsinclude_HEADERS = ../include/sbsms.h
lib_LTLIBRARIES = libsbsms.la
libsbsms_la_SOURCES = pitch.cpp peak.cpp sms.cpp track.cpp trackpoint.cpp utils.cpp audio.cpp resample.cpp sbsms.cpp fft.cpp grain.cpp buffer.cpp subband.cpp audio.h buffer.h fft.h utils.h defs.h peak.h trackpoint.h grain.h pitch.h real.h resample.h ../include/sbsms.h sms.h subband.h track.h
libsbsms_la_LDFLAGS = -version-info @SHARED_VERSION_INFO@ @SHLIB_VERSION_ARG@
bin_PROGRAMS = @SBSMS_PROGS@
sbsms_LDADD = libsbsms.la $(SNDFILE_LIBS) $(MAD_LIBS)
sbsms_LDFLAGS = $(os_ldflags)
@ENABLE_PORTAUDIO_TRUE@sbsmsplay_LDADD = libsbsms.la $(PORTAUDIO_LIBS)
@ENABLE_PORTAUDIO_TRUE@sbsmsplay_LDFLAGS = $(os_ldflags)
@ENABLE_PORTAUDIO_TRUE@sbsmsplay_SOURCES = testplay.cpp play.cpp play.h audiobuffer.cpp audiobuffer.h
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@wxsbsmsplayer_LDADD = libsbsms.la $(PORTAUDIO_LIBS) $(SNDFILE_LIBS) $(MAD_LIBS) $(WX_LIBS)
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@wxsbsmsplayer_LDFLAGS = $(os_ldflags) $(PORTAUDIO_CFLAGS) $(SNDFILE_CFLAGS)
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@sbsms_SOURCES = test.cpp import.cpp import.h pcm.cpp pcm.h convert.cpp convert.h
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@sbsms_SOURCES = test.cpp mp3.cpp mp3.h mp3tech.cpp mp3tech.h audiobuffer.cpp audiobuffer.h import.cpp import.h pcm.cpp pcm.h convert.cpp convert.h
@ENABLE_SNDFILE_FALSE@sbsms_SOURCES = test.cpp convert.cpp convert.h
@ENABLE_MP3_FALSE@@ENABLE_SNDFILE_TRUE@wxsbsmsplayer_SOURCES = wxplayer.cpp wxplayer.h wxplayerframe.cpp wxplayerframe.h wxplayctrl.cpp wxplayctrl.h wxconvertdlg.cpp wxconvertdlg.h play.cpp play.h convert.cpp convert.h import.cpp import.h pcm.cpp pcm.h audiobuffer.cpp audiobuffer.h
@ENABLE_MP3_TRUE@@ENABLE_SNDFILE_TRUE@wxsbsmsplayer_SOURCES = wxplayer.cpp wxplayer.h wxplayerframe.cpp wxplayerframe.h wxplayctrl.cpp wxplayctrl.h wxconvertdlg.cpp wxconvertdlg.h play.cpp play.h convert.cpp convert.h mp3.cpp mp3.h mp3tech.cpp mp3tech.h import.cpp import.h pcm.cpp pcm.h audiobuffer.cpp audiobuffer.h
@ENABLE_SNDFILE_FALSE@wxsbsmsplayer_SOURCES = wxplayer.cpp wxplayer.h wxplayerframe.cpp wxplayerframe.h wxplayctrl.cpp wxplayctrl.h wxconvertdlg.cpp wxconvertdlg.h play.cpp play.h convert.cpp convert.h audiobuffer.cpp audiobuffer.h
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsbsms.la: $(libsbsms_la_OBJECTS) $(libsbsms_la_DEPENDENCIES) 
	$(libsbsms_la_LINK) -rpath $(libdir) $(libsbsms_la_OBJECTS) $(libsbsms_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
sbsms$(EXEEXT): $(sbsms_OBJECTS) $(sbsms_DEPENDENCIES) 
	@rm -f sbsms$(EXEEXT)
	$(sbsms_LINK) $(sbsms_OBJECTS) $(sbsms_LDADD) $(LIBS)
sbsmsplay$(EXEEXT): $(sbsmsplay_OBJECTS) $(sbsmsplay_DEPENDENCIES) 
	@rm -f sbsmsplay$(EXEEXT)
	$(sbsmsplay_LINK) $(sbsmsplay_OBJECTS) $(sbsmsplay_LDADD) $(LIBS)
wxsbsmsplayer$(EXEEXT): $(wxsbsmsplayer_OBJECTS) $(wxsbsmsplayer_DEPENDENCIES) 
	@rm -f wxsbsmsplayer$(EXEEXT)
	$(wxsbsmsplayer_LINK) $(wxsbsmsplayer_OBJECTS) $(wxsbsmsplayer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audiobuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/import.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mp3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mp3tech.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pcm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peak.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pitch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/play.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resample.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sbsms.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sms.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subband.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testplay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/track.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trackpoint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wxconvertdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wxplayctrl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wxplayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wxplayerframe.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libsbsmsincludeHEADERS: $(libsbsmsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libsbsmsincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libsbsmsincludedir)"
	@list='$(libsbsmsinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libsbsmsincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libsbsmsincludedir)/$$f'"; \
	  $(libsbsmsincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libsbsmsincludedir)/$$f"; \
	done

uninstall-libsbsmsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libsbsmsinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libsbsmsincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libsbsmsincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libsbsmsincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@ENABLE_PORTAUDIO_FALSE@clean: clean-am

@ENABLE_WX_FALSE@clean: clean-am

@MACOSX_FALSE@clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libsbsmsincludeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libsbsmsincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libsbsmsincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-libsbsmsincludeHEADERS


@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@clean: cleanapproot clean-am
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@cleanapproot:
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo rm -rf $(top_builddir)/approot
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@all: $(top_builddir)/approot/Applications/wxsbsmsplayer.app $(top_builddir)/mac/Info.plist $(top_builddir)/mac/sbsms.icns
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@$(top_builddir)/approot/Applications/wxsbsmsplayer.app: wxsbsmsplayer
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo strip -u -r wxsbsmsplayer
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo mkdir -p $(top_builddir)/approot/Applications/wxsbsmsplayer.app/Contents/MacOS
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo mkdir -p $(top_builddir)/approot/Applications/wxsbsmsplayer.app/Contents/Resources
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo cp -f wxsbsmsplayer $(top_builddir)/approot/Applications/wxsbsmsplayer.app/Contents/MacOS/wxsbsmsplayer
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo cp -f $(top_builddir)/mac/Info.plist $(top_builddir)/approot/Applications/wxsbsmsplayer.app/Contents
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo cp -f $(top_builddir)/mac/sbsms.icns $(top_builddir)/approot/Applications/wxsbsmsplayer.app/Contents/Resources
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo sh -c "echo sbsms > $(top_builddir)/approot/Applications/wxsbsmsplayer.app/Contents/PkgInfo"
@ENABLE_PORTAUDIO_TRUE@@ENABLE_WX_TRUE@@MACOSX_TRUE@	sudo chown -R root:admin $(top_builddir)/approot/Applications
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
